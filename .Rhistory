extrator = function(data_pasta_dengue){
read.dbf(data_pasta_dengue)
}
data_dengue = map_dfr(data_pasta_dengue, extrator)
data_dengue = filter(data_dengue, data_dengue$SG_UF == 25)
#abrir arquivos chik
data_pasta_chik = list.files(pattern = '^CHIKON', recursive = TRUE)
extrator1 = function(data_pasta_chik){
read.dbf(data_pasta_chik)
}
data_chik = map_dfr(data_pasta_chik, extrator)
data_chik = filter(data_chik, data_chik$SG_UF == 25)
#abrir arquivos zika
data_pasta_zika = list.files(pattern = '^NINDINET', recursive = TRUE)
extrator1 = function(data_pasta_zika){
read.dbf(data_pasta_zika)
}
data_pasta_zika = map_dfr(data_pasta_zika, extrator)
data_zika = filter(data_pasta_zika, data_pasta_zika$ID_AGRAVO == "A928")
data_zika = filter(data_zika, data_zika$SG_UF == 25)
#################### LIMPAR DADOS E AJUSTE DE CLASSES #########################
#função remover acentos
RemoveAcentos <- function(textoComAcentos) {
if(!is.character(textoComAcentos)){
on.exit()
}
letrasComAcentos <- "??????????????????????????????????????????????????Ǵ`^~?"
letrasSemAcentos <- "aeiouAEIOUyYaeiouAEIOUaeiouAEIOUaoAOnNaeiouAEIOUycC     "
textoSemAcentos <- chartr(
old = letrasComAcentos,
new = letrasSemAcentos,
x = textoComAcentos
)
return(textoSemAcentos)
}
RemoveAcentos(data_dengue$NM_PACIENT)
RemoveAcentos(data_chik$NM_PACIENT)
RemoveAcentos(data_zika$NM_PACIENT)
#ajustar numeric
data_dengue$RESUL_PCR_ <- as.numeric(levels(data_dengue$RESUL_PCR_))[data_dengue$RESUL_PCR_]
data_chik$RESUL_PCR_ <- as.numeric(levels(data_chik$RESUL_PCR_))[data_chik$RESUL_PCR_]
#ajustar data
data_dengue$DT_SIN_PRI <- as.Date(data_dengue$DT_SIN_PRI, format="%d-%m-%Y")
data_dengue$DT_NASC <- as.Date(data_dengue$DT_NASC, format="%d-%m-%Y")
############################# CRIACAO DE CHAVE ###############################
#criar id pessoa
#criação de ID_Pessoa dengue
id_pessoa_dengue <- paste(data_dengue$NM_PACIENT,
data_dengue$DT_NASC,
data_dengue$ID_MN_RESI)
#criação de ID_Pessoa zika
id_pessoa_zika <- paste(data_zika$NM_PACIENT,
data_zika$DT_NASC,
data_zika$ID_MN_RESI)
#criação de ID_Pessoa chik
id_pessoa_chik <- paste(data_chik$NM_PACIENT,
data_chik$DT_NASC,
data_chik$ID_MN_RESI)
#acrescentar coluna com ID_Pessoa
data_dengue <- mutate(data_dengue, id_pessoa_dengue)
data_zika <- mutate(data_zika, id_pessoa_zika)
data_chik <- mutate(data_chik, id_pessoa_chik)
################## ORDENAR INICIO DE SINTOMAS E FILTRAR OS VALIDOS #############
#ordenar por início de sintomas
data_dengue <- arrange(data_dengue, data_dengue$DT_SIN_PRI)
data_chik <- arrange(data_chik, data_chik$DT_SIN_PRI)
data_zika <- arrange(data_zika, data_zika$DT_SIN_PRI)
#separar registros que tem início de sintomas anterior a data de surgimento de
#dengue, zika e chik
data_dengue_menor_2007 <- filter(data_dengue, data_dengue$DT_SIN_PRI < 2007)
data_chik_menor_2016 <- filter(data_chik, data_chik$DT_SIN_PRI < 2016)
data_zika_menor_2016 <- filter(data_zika, data_zika$DT_SIN_PRI < 2016)
#separar registros válidos para análise
data_dengue <- filter(data_dengue, data_dengue$DT_SIN_PRI >=2007)
data_chik <- filter(data_chik, data_chik$DT_SIN_PRI >=2016)
data_zika <- filter(data_zika, data_zika$DT_SIN_PRI >=2016)
#separar registros válidos para análise por data
data_dengue <- filter(data_dengue, data_dengue$DT_SIN_PRI > "2006-12-31")
data_chik <- filter(data_chik, data_chik$DT_SIN_PRI > "2015-12-31")
data_zika <- filter(data_zika, data_zika$DT_SIN_PRI > "2015-12-31")
#filtrar registros válidos para 2022 contando da semana epidemiológica
data_dengue <- filter(data_dengue, data_dengue$DT_SIN_PRI > "2022-01-01")
#dengue
#grupo1 (confirmados)
data_dengue_pcr <- filter(data_dengue, data_dengue$RESUL_PCR_ == "1")
data_dengue_outros_positivos <-   filter(data_dengue,
data_dengue$RESUL_SORO == "1" |
data_dengue$RESUL_NS1 == "1" |
data_dengue$RESUL_VI_N == "1" |
data_dengue$HISTOPA_N == "1" |
data_dengue$IMUNOH_N == "1")
data_dengue_clin_epidemio <- filter(data_dengue,
data_dengue$CRITERIO =="2")
#confirmados_dengue (laboratorial e clínico epidemiológico)
data_dengue_confirmados <- bind_rows(data_dengue_pcr,
data_dengue_outros_positivos,
data_dengue_clin_epidemio)
############################ REGRA DOS 90 DIAS PARA OS CONFIMRADOS #############
#regra de 90 dias para dengue
#dentro do mesmo ano epidemiológico, se o id_pessoa for o mesmo, o registro a ser
#contado será o de DT_SIN_PRI mais antigo e depois de 90 dias
DT_dengue_90_dias <- arrange(data_dengue_confirmados, data_dengue_confirmados$NM_PACIENT)
#preciso pegar somente os duplicados e aplicar a regra
d1 <- subset(data_dengue_confirmados, select = c("NU_NOTIFIC", "DT_SIN_PRI","id_pessoa_dengue"))
d1 <- arrange(d1, d1$id_pessoa_dengue)
#testando **lembrar de pegar somente confirmado
#vê quando IS for nulo**
d2 <- d1
d3 <- table(d2$id_pessoa_dengue)
d3 <- data.frame(d3)
d3 <- rename(d3, id_pessoa_dengue = Var1)
d4 <- left_join(d2, d3, by = "id_pessoa_dengue")
d4 <- filter(d4, d4$Freq >= 2)
d4 <- arrange(d4, d4$id_pessoa_dengue, d4$DT_SIN_PRI)
#o by deve ser aqui pra depois fazer a diferença
d4 <- d4 %>% mutate(diff =  d4$DT_SIN_PRI - lag (d4$DT_SIN_PRI)) #falta especificar o by
d4 <- rename(d4, nu_dias = diff)
d4$nu_dias[is.na(d4$nu_dias)] <- 0
d4$nu_dias <- as.integer(d4$nu_dias)
d7 <- d4
d7 <- arrange(d4, d4$id_pessoa_dengue, d4$DT_SIN_PRI)
d7 <- d7 %>% group_split(d7)
View(d7)
d7 <- d7 %>% group_split(d7$id_pessoa_dengue, d7$nu_dias == 0 | d7$nu_dias <= 90)
d7 <- data.frame(d7)#separar por grupos
View(d7)
View(d7[[1]][[1]])
View(d7[[1]][[4]])
d7 <- d7 %>% group_split(d7$id_pessoa_dengue, d7$nu_dias == 0 & d7$nu_dias <= 90)
d7 <- d4
d7 <- arrange(d4, d4$id_pessoa_dengue, d4$DT_SIN_PRI)
d7 <- d7 %>% group_split(d7$id_pessoa_dengue, d7$nu_dias == 0 & d7$nu_dias <= 90)
d7 <- data.frame(d7)#separar por grupos
View(d7)
View(d7[[1]][[1]])
View(d7[[1]][[2]])
d7 <- d4
d7 <- arrange(d4, d4$id_pessoa_dengue, d4$DT_SIN_PRI)
d7 <- d7 %>% group_split(d7$id_pessoa_dengue)
d7 <- data.frame(d7)#separar por grupos
View(d7)
View(d7[[1]][[1]])
#preciso aplicar o diff em cada tibble
d7 <- d7 %>% mutate(diff =  d7$DT_SIN_PRI - lag (d7$DT_SIN_PRI))
View(d7)
class(d7)
#preciso aplicar o diff em cada tibble
d7 <- d7 %>% apply(diff =  d7$DT_SIN_PRI - lag (d7$DT_SIN_PRI))
#preciso aplicar o diff em cada tibble
d7 <- d7 %>% apply(d7, diff =  d7$DT_SIN_PRI - lag (d7$DT_SIN_PRI))
#preciso aplicar o diff em cada tibble
d7 <- d7 %>% apply(d7, diff(d7$DT_SIN_PRI - lag (d7$DT_SIN_PRI)))
#preciso aplicar o diff em cada tibble
d7 <- d7 %>% add_row(d7, diff(d7$DT_SIN_PRI - lag (d7$DT_SIN_PRI)))
#preciso aplicar o diff em cada tibble
d7 <- d7 %>% add_row(d7, diff = d7$DT_SIN_PRI - lag (d7$DT_SIN_PRI))
d7 <- d4
d7 <- arrange(d4, d4$id_pessoa_dengue, d4$DT_SIN_PRI)
d7 <- d7 %>% group_split(d7$id_pessoa_dengue)
#preciso aplicar o diff em cada tibble
d7 <- d7 %>% add_row(d7, diff = d7$DT_SIN_PRI - lag (d7$DT_SIN_PRI))
glimpse(d7)
View(d7)
#preciso aplicar o diff em cada tibble
d7 <- d7 %>% add_row(d7, d7$DT_SIN_PRI)
d7 <- data.frame(d7)#separar por grupos
#preciso aplicar o diff em cada tibble
d7 <- d7 %>% add_row(d7, d7$DT_SIN_PRI)
#preciso aplicar o diff em cada tibble
d7 <- d7 %>% diff(d7, d7$DT_SIN_PRI)
d7 <- d4
d7 <- arrange(d4, d4$id_pessoa_dengue, d4$DT_SIN_PRI)
d7 <- d7 %>% group_split(d7$id_pessoa_dengue)
#preciso aplicar o diff em cada tibble
d7 <- d7 %>% diff(d7, d7$DT_SIN_PRI)
#preciso aplicar o diff em cada tibble
d7 <- d7 %>% diff(d7, d7$DT_SIN_PRI - d7$DT_SIN_PRI)
#preciso aplicar o diff em cada tibble
d7 <- d7 %>% diff(d7, d7$DT_SIN_PRI -  lag (d7$DT_SIN_PRI)))
#preciso aplicar o diff em cada tibble
d7 <- d7 %>% diff(d7, d7$DT_SIN_PRI -  lag (d7$DT_SIN_PRI))
#preciso aplicar o diff em cada tibble
d7 <- d7 %>% mutate(diff(d7, d7$DT_SIN_PRI -  lag (d7$DT_SIN_PRI)))
#preciso aplicar o diff em cada tibble
d7 <- d7 %>% mutate(c(diff(d7, d7$DT_SIN_PRI -  lag (d7$DT_SIN_PRI))))
#preciso aplicar o diff em cada tibble
d7 <- d7 %>% mutate(c(diff(d7, d7$DT_SIN_PRI, lag = 1))))
#preciso aplicar o diff em cada tibble
d7 <- d7 %>% diff(d7, d7$DT_SIN_PRI, lag = 1)
#preciso aplicar o diff em cada tibble
d7 <- d7 %>% diff(d7, d7$DT_SIN_PRI, lag = 2)
#preciso aplicar o diff em cada tibble
d7 <- d7 %>% diff(d7$DT_SIN_PRI, lag = 1)
#preciso aplicar o diff em cada tibble
d7 <- d7 %>% diff(d7, lag = 1)
#preciso aplicar o diff em cada tibble
d7 <- d7 %>% setdiff(d7, lag = 1)
#preciso aplicar o diff em cada tibble
d7 <- d7 %>% setdiff(d7$DT_SIN_PRI)
#preciso aplicar o diff em cada tibble
d7 <- d7 %>% setdiff(d7)
d7 <- d4
d7 <- arrange(d4, d4$id_pessoa_dengue, d4$DT_SIN_PRI)
d7 <- d7 %>% group_split(d7$id_pessoa_dengue)
#preciso aplicar o diff em cada tibble
d7 <- d7 %>% (d7$DT_SIN_PRI - lag (d7$DT_SIN_PRI)))
#preciso aplicar o diff em cada tibble
d7 <- d7 %>% (d7$DT_SIN_PRI - d7$DT_SIN_PRI)
View(d7[[1]][[47]])
View(d7)
class(d7)
View(d7[[1]])
View(d4)
#preciso aplicar o diff em cada tibble
d7[(d7$nu_dias = 0) & (d7$nu_dias <= 90)]
View(d7)
d7[[1]]
class(d7)
d8 <- d7 %>% map (mutate (diff (d7$DT_SIN_PRI - lag (d7$DT_SIN_PRI))))
library("purr")
install.packages("purr")
install.packages("::base")
library("purr")
library("purrr")
d8 <- d7 %>% map (mutate (diff (d7$DT_SIN_PRI - lag (d7$DT_SIN_PRI))))
d8 <- d7 %>% map (mutate (diff = d7$DT_SIN_PRI - lag (d7$DT_SIN_PRI)))
d8 <- d7 %>% map_dbl (mutate (diff = d7$DT_SIN_PRI - lag (d7$DT_SIN_PRI)))
d8 <- d7 %>% map2 (mutate (diff = d7$DT_SIN_PRI - lag (d7$DT_SIN_PRI)))
d8 <- d7 %>% map (diff = d7$DT_SIN_PRI - lag (d7$DT_SIN_PRI))
d8 <- d7 %>% map (d7$DT_SIN_PRI - lag (d7$DT_SIN_PRI))
d8 <- d7 %>% map (diff, d7$DT_SIN_PRI - lag (d7$DT_SIN_PRI))
d8 <- d7 %>% map (diff, d7$DT_SIN_PRI))
diff_DT_SIN_PRI <- function(x) { x =  d7$DT_SIN_PRI - lag (d7$DT_SIN_PRI }
invoke(diff_DT_SIN_PRI, list(d7))
d8 <- d7 %>% map (diff, d7$DT_SIN_PRI))
diff_DT_SIN_PRI <- function(x) { x =  d7$DT_SIN_PRI - lag (d7$DT_SIN_PRI)}
invoke(diff_DT_SIN_PRI, list(d7))
invoke(diff_DT_SIN_PRI, list(x = d7))
View(d4)
#teste2
d8 <- group_by(d4$id_pessoa_dengue)
#teste2
d8 <- d4 %>% group_by(id_pessoa_dengue)
View(d8)
View(d7)
View(d7[[1]])
d7 <- d4
d7 <- arrange(d4, d4$id_pessoa_dengue, d4$DT_SIN_PRI)
d8 <- d7 %>% drop(subset(d7, d7$id_pessoa_dengue, d7$DT_SIN_PRI), keep = TRUE)
d8 <- d7 %>% drop(subset(d7, d7$id_pessoa_dengue, d7$DT_SIN_PRI), keep = TRUE)
d7 <- d4
d7 <- arrange(d4, d4$id_pessoa_dengue, d4$DT_SIN_PRI)
View(d7)
d8 <- d7 %>% mutate(d4$DT_SIN_PRI - d4$DT_SIN_PRI)
View(d8)
d8 <- d7 %>% mutate(dif = lag (d4$DT_SIN_PRI))
View(d8)
d7 <- d7 %>% group_split(d7$id_pessoa_dengue)
View(d7)
View(d7[[1]])
View(d7[[18]])
View(d7[[28]])
View(d7[[42]])
View(d7[[28]])
View(d7[[34]])
subset(d7,
d7$id_pessoa_dengue >= 0,
id_pessoa_dengue,
drop = FALSE)
subset(d7,
d7$id_pessoa_dengue >= 0,
select=c(id_pessoa_dengue),
drop = FALSE)
d7 <- d4
d7 <- arrange(d4, d4$id_pessoa_dengue, d4$DT_SIN_PRI)
d7 <- drop(subset(d7, d7$id_pessoa_dengue, d7$DT_SIN_PRI), keep = TRUE)
d7 <- drop(subset(d7, d7$id_pessoa_dengue, d7$DT_SIN_PRI))
d7 <- drop(subset(d7, d7$nu_dias == 0 & d7$nu_dias <= 90, select = c(id_pessoa_dengue, DT_SIN_PRI)))
View(d7)
d7 <- d4
d7 <- arrange(d4, d4$id_pessoa_dengue, d4$DT_SIN_PRI)
d7 <- drop(d7$id_pessoa_dengue)
d7 <- drop(d7$id_pessoa_dengue)
d7 <- drop(d7, d7$id_pessoa_dengue)
d7 <- drop(d7)
d7 <- drop(d7)
d7 <- d4
d7 <- arrange(d4, d4$id_pessoa_dengue, d4$DT_SIN_PRI)
d7 <- drop(d7)
d7 <- drop(d7, d7$id_pessoa_dengue)
d7 <- drop(d7)
d7 <- group_by(d4, d4$id_pessoa_dengue, d4$DT_SIN_PRI) %>% apply(d4, 2, sum)
d7 <- group_by(d4, d4$id_pessoa_dengue, d4$DT_SIN_PRI) %>% apply(d4, 2, identify)
d7 <- group_by(d4, d4$id_pessoa_dengue, d4$DT_SIN_PRI) %>% apply(d4, identify)
d7 <- group_by(d4, d4$id_pessoa_dengue, d4$DT_SIN_PRI) %>% apply(d4, d7, identify)
d7 <- group_by(d4, d4$id_pessoa_dengue, d4$DT_SIN_PRI)
View(d7)
d7 <- d4
d7 <- arrange(d4, d4$id_pessoa_dengue, d4$DT_SIN_PRI)
d7 <- duplicated(d4, d4$DT_SIN_PRI, d4$id_pessoa_dengue)
d7 <- unique(d4, d4$DT_SIN_PRI, d4$id_pessoa_dengue)
d7 <- d4(!duplicated (d4, d4$DT_SIN_PRI, d4$id_pessoa_dengue))
d7 <- d4(!duplicated (d7, d7$DT_SIN_PRI, d7$id_pessoa_dengue))
d7 <- d7(!duplicated (d7, d7$DT_SIN_PRI, d7$id_pessoa_dengue))
d7 <- d4
d7 <- arrange(d4, d4$id_pessoa_dengue, d4$DT_SIN_PRI)
d7 <- d7(!duplicated (d7$DT_SIN_PRI, d7$id_pessoa_dengue))
d7 <- (!duplicated (d7$DT_SIN_PRI, d7$id_pessoa_dengue))
d7(!duplicated (d7$DT_SIN_PRI, d7$id_pessoa_dengue))
d7[!duplicated (d7$DT_SIN_PRI, d7$id_pessoa_dengue),]
d7 <- mutate(d7, d7$DT_SIN_PRI, d7$id_pessoa_dengue)
d7 <- mutate(dupl = d7$DT_SIN_PRI, d7$id_pessoa_dengue)
d7 <- d7 %>%  mutate(dupl = d7$DT_SIN_PRI, d7$id_pessoa_dengue)
d8 <- d8 %>% mutate(dupl = d4$DT_SIN_PRI, d4$id_pessoa_dengue)
View(d8)
d8 <- d8 %>% mutate(c (d4$DT_SIN_PRI, d4$id_pessoa_dengue))
d8 <- d8 %>% mutate(dupli = c(d4$DT_SIN_PRI, d4$id_pessoa_dengue))
d8 <- d8 %>% mutate(paste(d4$DT_SIN_PRI, d4$id_pessoa_dengue))
View(d8)
d7[!duplicated paste(d4$DT_SIN_PRI, d4$id_pessoa_deng),]
d7[!duplicated (paste(d4$DT_SIN_PRI, d4$id_pessoa_deng),]
d8 <- d8 %>% rename(dupli = paste(d4$DT_SIN_PRI, d4$id_pessoa_deng)
View(d8)
d7 <- d4
d7 <- arrange(d4, d4$id_pessoa_dengue, d4$DT_SIN_PRI)
d7 <- d4
d7 <- arrange(d4, d4$id_pessoa_dengue, d4$DT_SIN_PRI)
d8 <- d8 %>% mutate(c(d4$DT_SIN_PRI, d4$id_pessoa_dengue))
d8 <- paste(d4$DT_SIN_PRI, d4$id_pessoa_dengue))
View(d8)
d8 <- paste(d4$DT_SIN_PRI, d4$id_pessoa_dengue)
d8 <- data.frame(d8)
d7 <- mutate(d8)
View(d7)
d7 <- d4
d7 <- arrange(d4, d4$id_pessoa_dengue, d4$DT_SIN_PRI)
View(d7)
d7 <- mutate(d8)
d7 <- d4
d7 <- arrange(d4, d4$id_pessoa_dengue, d4$DT_SIN_PRI)
d7 <- mutate(d8,)
d7 <- d4
d7 <- arrange(d4, d4$id_pessoa_dengue, d4$DT_SIN_PRI)
d7 <- mutate(dupli = d8)
d7 <- d7 %>% mutate(d8)
View(d7)
d7[!duplicated (d7$d8,]
d7[!duplicated(d7$d8),]
d7[duplicated(d7$d8),]
d7[!duplicated(d7$d8),]
library("lubridate")
library("stringr")
library("tidyverse")
library("foreign")
library("writexl")
library("dplyr")
library("rio")
library("base")
library("purrr")
#comentar mais e escrever o que cada objeto e também lembrar da semana epidemiológica
############### DESCOMPACTAR ARQUIVOS ARBOVIROSE ###############################
#abrir arquivos dengue
getwd()
data_pasta_dengue = list.files(pattern = '^DENGON', recursive = TRUE)
extrator = function(data_pasta_dengue){
read.dbf(data_pasta_dengue)
}
data_dengue = map_dfr(data_pasta_dengue, extrator)
data_dengue = filter(data_dengue, data_dengue$SG_UF == 25)
#abrir arquivos chik
data_pasta_chik = list.files(pattern = '^CHIKON', recursive = TRUE)
extrator1 = function(data_pasta_chik){
read.dbf(data_pasta_chik)
}
data_chik = map_dfr(data_pasta_chik, extrator)
data_chik = filter(data_chik, data_chik$SG_UF == 25)
#abrir arquivos zika
data_pasta_zika = list.files(pattern = '^NINDINET', recursive = TRUE)
extrator1 = function(data_pasta_zika){
read.dbf(data_pasta_zika)
}
data_pasta_zika = map_dfr(data_pasta_zika, extrator)
data_zika = filter(data_pasta_zika, data_pasta_zika$ID_AGRAVO == "A928")
data_zika = filter(data_zika, data_zika$SG_UF == 25)
#################### LIMPAR DADOS E AJUSTE DE CLASSES #########################
#função remover acentos
RemoveAcentos <- function(textoComAcentos) {
if(!is.character(textoComAcentos)){
on.exit()
}
letrasComAcentos <- "??????????????????????????????????????????????????Ǵ`^~?"
letrasSemAcentos <- "aeiouAEIOUyYaeiouAEIOUaeiouAEIOUaoAOnNaeiouAEIOUycC     "
textoSemAcentos <- chartr(
old = letrasComAcentos,
new = letrasSemAcentos,
x = textoComAcentos
)
return(textoSemAcentos)
}
RemoveAcentos(data_dengue$NM_PACIENT)
RemoveAcentos(data_chik$NM_PACIENT)
RemoveAcentos(data_zika$NM_PACIENT)
#ajustar numeric
data_dengue$RESUL_PCR_ <- as.numeric(levels(data_dengue$RESUL_PCR_))[data_dengue$RESUL_PCR_]
data_chik$RESUL_PCR_ <- as.numeric(levels(data_chik$RESUL_PCR_))[data_chik$RESUL_PCR_]
#ajustar data
data_dengue$DT_SIN_PRI <- as.Date(data_dengue$DT_SIN_PRI, format="%d-%m-%Y")
data_dengue$DT_NASC <- as.Date(data_dengue$DT_NASC, format="%d-%m-%Y")
############################# CRIACAO DE CHAVE ###############################
#criar id pessoa
#criação de ID_Pessoa dengue
id_pessoa_dengue <- paste(data_dengue$NM_PACIENT,
data_dengue$DT_NASC,
data_dengue$ID_MN_RESI)
#criação de ID_Pessoa zika
id_pessoa_zika <- paste(data_zika$NM_PACIENT,
data_zika$DT_NASC,
data_zika$ID_MN_RESI)
#criação de ID_Pessoa chik
id_pessoa_chik <- paste(data_chik$NM_PACIENT,
data_chik$DT_NASC,
data_chik$ID_MN_RESI)
#acrescentar coluna com ID_Pessoa
data_dengue <- mutate(data_dengue, id_pessoa_dengue)
data_zika <- mutate(data_zika, id_pessoa_zika)
data_chik <- mutate(data_chik, id_pessoa_chik)
################## ORDENAR INICIO DE SINTOMAS E FILTRAR OS VALIDOS #############
#ordenar por início de sintomas
data_dengue <- arrange(data_dengue, data_dengue$DT_SIN_PRI)
data_chik <- arrange(data_chik, data_chik$DT_SIN_PRI)
data_zika <- arrange(data_zika, data_zika$DT_SIN_PRI)
#separar registros que tem início de sintomas anterior a data de surgimento de
#dengue, zika e chik
data_dengue_menor_2007 <- filter(data_dengue, data_dengue$DT_SIN_PRI < 2007)
data_chik_menor_2016 <- filter(data_chik, data_chik$DT_SIN_PRI < 2016)
data_zika_menor_2016 <- filter(data_zika, data_zika$DT_SIN_PRI < 2016)
#separar registros válidos para análise
data_dengue <- filter(data_dengue, data_dengue$DT_SIN_PRI >=2007)
data_chik <- filter(data_chik, data_chik$DT_SIN_PRI >=2016)
data_zika <- filter(data_zika, data_zika$DT_SIN_PRI >=2016)
#separar registros válidos para análise por data
data_dengue <- filter(data_dengue, data_dengue$DT_SIN_PRI > "2006-12-31")
data_chik <- filter(data_chik, data_chik$DT_SIN_PRI > "2015-12-31")
data_zika <- filter(data_zika, data_zika$DT_SIN_PRI > "2015-12-31")
#filtrar registros válidos para 2022 contando da semana epidemiológica
data_dengue <- filter(data_dengue, data_dengue$DT_SIN_PRI > "2022-01-01")
#dengue
#grupo1 (confirmados)
data_dengue_pcr <- filter(data_dengue, data_dengue$RESUL_PCR_ == "1")
data_dengue_outros_positivos <-   filter(data_dengue,
data_dengue$RESUL_SORO == "1" |
data_dengue$RESUL_NS1 == "1" |
data_dengue$RESUL_VI_N == "1" |
data_dengue$HISTOPA_N == "1" |
data_dengue$IMUNOH_N == "1")
data_dengue_clin_epidemio <- filter(data_dengue,
data_dengue$CRITERIO =="2")
#confirmados_dengue (laboratorial e clínico epidemiológico)
data_dengue_confirmados <- bind_rows(data_dengue_pcr,
data_dengue_outros_positivos,
data_dengue_clin_epidemio)
############################ REGRA DOS 90 DIAS PARA OS CONFIMRADOS #############
#regra de 90 dias para dengue
#dentro do mesmo ano epidemiológico, se o id_pessoa for o mesmo, o registro a ser
#contado será o de DT_SIN_PRI mais antigo e depois de 90 dias
DT_dengue_90_dias <- arrange(data_dengue_confirmados, data_dengue_confirmados$NM_PACIENT)
#preciso pegar somente os duplicados e aplicar a regra
d1 <- subset(data_dengue_confirmados, select = c("NU_NOTIFIC", "DT_SIN_PRI","id_pessoa_dengue"))
d1 <- arrange(d1, d1$id_pessoa_dengue)
#testando **lembrar de pegar somente confirmado
#vê quando IS for nulo**
d2 <- d1
d3 <- table(d2$id_pessoa_dengue)
d3 <- data.frame(d3)
d3 <- rename(d3, id_pessoa_dengue = Var1)
d4 <- left_join(d2, d3, by = "id_pessoa_dengue")
d4 <- filter(d4, d4$Freq >= 2)
d4 <- arrange(d4, d4$id_pessoa_dengue, d4$DT_SIN_PRI)
#o by deve ser aqui pra depois fazer a diferença
d4 <- d4 %>% mutate(diff =  d4$DT_SIN_PRI - lag (d4$DT_SIN_PRI)) #falta especificar o by
d4 <- rename(d4, nu_dias = diff)
d4$nu_dias[is.na(d4$nu_dias)] <- 0
d4$nu_dias <- as.integer(d4$nu_dias)
#teste2
#lembrar de retirar (mesmo id_pessoa e dt_sin_pri)
d7 <- d4
d7 <- arrange(d4, d4$id_pessoa_dengue, d4$DT_SIN_PRI)
d8 <- paste(d4$DT_SIN_PRI, d4$id_pessoa_dengue)
d8 <- data.frame(d8)
View(d8)
d8 %>% d8 %>% rename(dupli = d8)
d8 %>% d8 %>% rename(d8$dupli = d8$d8)
d8 %>% d8(rename, dupli = d8)
d8 <- rename(d8, dupli = d8)
View(d8)
d7 <- d7 %>% mutate(d8$dupli)
View(d7)
8
d7 <- d8 %>% mutate(dupli)
d7 <- d7 %>% mutate(dupli)
d7 <- d4
d7 <- arrange(d4, d4$id_pessoa_dengue, d4$DT_SIN_PRI)
d8 <- paste(d4$DT_SIN_PRI, d4$id_pessoa_dengue)
d8 <- data.frame(d8)
d8 <- rename(d8, dupli = d8)
d7 <- d7 %>% mutate(dupli)
d7 <- d7 %>% mutate(d8$dupli)
d7 <- rename(d7, dupli = d8$dupli)
View(d7)
d7[!duplicated(d8$dupli),]
View(d7)
gc()
